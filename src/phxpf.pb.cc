// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: phxpf.proto

#include "phxpf.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace phxpf {
class PhxIAmMasterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PhxIAmMaster>
      _instance;
} _PhxIAmMaster_default_instance_;
class PhxPFValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PhxPFValue>
      _instance;
} _PhxPFValue_default_instance_;
class PhxPFOperatorArgsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PhxPFOperatorArgs>
      _instance;
} _PhxPFOperatorArgs_default_instance_;
class PhxPFOperatorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PhxPFOperator>
      _instance;
} _PhxPFOperator_default_instance_;
class PhxPFResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PhxPFResponse>
      _instance;
} _PhxPFResponse_default_instance_;
class PhxPFSingleOperatorArgsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PhxPFSingleOperatorArgs>
      _instance;
} _PhxPFSingleOperatorArgs_default_instance_;
class PhxPFSingleOperatorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PhxPFSingleOperator>
      _instance;
} _PhxPFSingleOperator_default_instance_;
class PhxPFSingleResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PhxPFSingleResponse>
      _instance;
} _PhxPFSingleResponse_default_instance_;
class PhxPFMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PhxPFMsg>
      _instance;
} _PhxPFMsg_default_instance_;
}  // namespace phxpf
namespace protobuf_phxpf_2eproto {
void InitDefaultsPhxIAmMasterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::phxpf::_PhxIAmMaster_default_instance_;
    new (ptr) ::phxpf::PhxIAmMaster();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phxpf::PhxIAmMaster::InitAsDefaultInstance();
}

void InitDefaultsPhxIAmMaster() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPhxIAmMasterImpl);
}

void InitDefaultsPhxPFValueImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::phxpf::_PhxPFValue_default_instance_;
    new (ptr) ::phxpf::PhxPFValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phxpf::PhxPFValue::InitAsDefaultInstance();
}

void InitDefaultsPhxPFValue() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPhxPFValueImpl);
}

void InitDefaultsPhxPFOperatorArgsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_phxpf_2eproto::InitDefaultsPhxPFValue();
  {
    void* ptr = &::phxpf::_PhxPFOperatorArgs_default_instance_;
    new (ptr) ::phxpf::PhxPFOperatorArgs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phxpf::PhxPFOperatorArgs::InitAsDefaultInstance();
}

void InitDefaultsPhxPFOperatorArgs() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPhxPFOperatorArgsImpl);
}

void InitDefaultsPhxPFOperatorImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_phxpf_2eproto::InitDefaultsPhxPFOperatorArgs();
  {
    void* ptr = &::phxpf::_PhxPFOperator_default_instance_;
    new (ptr) ::phxpf::PhxPFOperator();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phxpf::PhxPFOperator::InitAsDefaultInstance();
}

void InitDefaultsPhxPFOperator() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPhxPFOperatorImpl);
}

void InitDefaultsPhxPFResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_phxpf_2eproto::InitDefaultsPhxPFValue();
  {
    void* ptr = &::phxpf::_PhxPFResponse_default_instance_;
    new (ptr) ::phxpf::PhxPFResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phxpf::PhxPFResponse::InitAsDefaultInstance();
}

void InitDefaultsPhxPFResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPhxPFResponseImpl);
}

void InitDefaultsPhxPFSingleOperatorArgsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::phxpf::_PhxPFSingleOperatorArgs_default_instance_;
    new (ptr) ::phxpf::PhxPFSingleOperatorArgs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phxpf::PhxPFSingleOperatorArgs::InitAsDefaultInstance();
}

void InitDefaultsPhxPFSingleOperatorArgs() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPhxPFSingleOperatorArgsImpl);
}

void InitDefaultsPhxPFSingleOperatorImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_phxpf_2eproto::InitDefaultsPhxPFSingleOperatorArgs();
  {
    void* ptr = &::phxpf::_PhxPFSingleOperator_default_instance_;
    new (ptr) ::phxpf::PhxPFSingleOperator();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phxpf::PhxPFSingleOperator::InitAsDefaultInstance();
}

void InitDefaultsPhxPFSingleOperator() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPhxPFSingleOperatorImpl);
}

void InitDefaultsPhxPFSingleResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::phxpf::_PhxPFSingleResponse_default_instance_;
    new (ptr) ::phxpf::PhxPFSingleResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phxpf::PhxPFSingleResponse::InitAsDefaultInstance();
}

void InitDefaultsPhxPFSingleResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPhxPFSingleResponseImpl);
}

void InitDefaultsPhxPFMsgImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::phxpf::_PhxPFMsg_default_instance_;
    new (ptr) ::phxpf::PhxPFMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::phxpf::PhxPFMsg::InitAsDefaultInstance();
}

void InitDefaultsPhxPFMsg() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPhxPFMsgImpl);
}

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phxpf::PhxIAmMaster, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phxpf::PhxIAmMaster, master_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phxpf::PhxPFValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phxpf::PhxPFValue, values_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phxpf::PhxPFOperatorArgs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phxpf::PhxPFOperatorArgs, partition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phxpf::PhxPFOperatorArgs, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phxpf::PhxPFOperator, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phxpf::PhxPFOperator, operator__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phxpf::PhxPFOperator, args_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phxpf::PhxPFResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phxpf::PhxPFResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phxpf::PhxPFResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phxpf::PhxPFResponse, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phxpf::PhxPFSingleOperatorArgs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phxpf::PhxPFSingleOperatorArgs, partition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phxpf::PhxPFSingleOperatorArgs, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phxpf::PhxPFSingleOperator, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phxpf::PhxPFSingleOperator, operator__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phxpf::PhxPFSingleOperator, args_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phxpf::PhxPFSingleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phxpf::PhxPFSingleResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phxpf::PhxPFSingleResponse, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phxpf::PhxPFSingleResponse, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phxpf::PhxPFMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phxpf::PhxPFMsg, vtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::phxpf::PhxPFMsg, value_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::phxpf::PhxIAmMaster)},
  { 6, -1, sizeof(::phxpf::PhxPFValue)},
  { 12, -1, sizeof(::phxpf::PhxPFOperatorArgs)},
  { 19, -1, sizeof(::phxpf::PhxPFOperator)},
  { 26, -1, sizeof(::phxpf::PhxPFResponse)},
  { 34, -1, sizeof(::phxpf::PhxPFSingleOperatorArgs)},
  { 41, -1, sizeof(::phxpf::PhxPFSingleOperator)},
  { 48, -1, sizeof(::phxpf::PhxPFSingleResponse)},
  { 56, -1, sizeof(::phxpf::PhxPFMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::phxpf::_PhxIAmMaster_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::phxpf::_PhxPFValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::phxpf::_PhxPFOperatorArgs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::phxpf::_PhxPFOperator_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::phxpf::_PhxPFResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::phxpf::_PhxPFSingleOperatorArgs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::phxpf::_PhxPFSingleOperator_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::phxpf::_PhxPFSingleResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::phxpf::_PhxPFMsg_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "phxpf.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013phxpf.proto\022\005phxpf\032\031google/protobuf/an"
      "y.proto\032\033google/protobuf/empty.proto\"\036\n\014"
      "PhxIAmMaster\022\016\n\006master\030\001 \001(\010\"\034\n\nPhxPFVal"
      "ue\022\016\n\006values\030\001 \003(\t\"H\n\021PhxPFOperatorArgs\022"
      "\021\n\tpartition\030\001 \001(\t\022 \n\005value\030\002 \001(\0132\021.phxp"
      "f.PhxPFValue\"c\n\rPhxPFOperator\022*\n\010operato"
      "r\030\001 \001(\0162\030.phxpf.PhxPFOperatorType\022&\n\004arg"
      "s\030\002 \001(\0132\030.phxpf.PhxPFOperatorArgs\"K\n\rPhx"
      "PFResponse\022\013\n\003ret\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\022 \n\005"
      "value\030\003 \001(\0132\021.phxpf.PhxPFValue\";\n\027PhxPFS"
      "ingleOperatorArgs\022\021\n\tpartition\030\001 \001(\t\022\r\n\005"
      "value\030\002 \001(\t\"o\n\023PhxPFSingleOperator\022*\n\010op"
      "erator\030\001 \001(\0162\030.phxpf.PhxPFOperatorType\022,"
      "\n\004args\030\002 \001(\0132\036.phxpf.PhxPFSingleOperator"
      "Args\">\n\023PhxPFSingleResponse\022\013\n\003ret\030\001 \001(\005"
      "\022\013\n\003msg\030\002 \001(\t\022\r\n\005value\030\003 \001(\010\";\n\010PhxPFMsg"
      "\022 \n\005vtype\030\001 \001(\0162\021.phxpf.PhxMsgType\022\r\n\005va"
      "lue\030\002 \001(\014*\247\001\n\021PhxPFOperatorType\022\021\n\rPHXPF"
      "_UNKNOWN\020\000\022\020\n\014PHXPF_FILTER\020\001\022\020\n\014PHXPF_UP"
      "DATE\020\002\022\020\n\014PHXPF_DELETE\020\003\022\027\n\023PHXPF_SINGLE"
      "_FILTER\020\004\022\027\n\023PHXPF_SINGLE_UPDATE\020\005\022\027\n\023PH"
      "XPF_SINGLE_DELETE\020\006*\206\002\n\014PhxPFRetType\022\031\n\025"
      "PHXPARTITIONFILTER_OK\020\000\022(\n\033PHXPARTITIONF"
      "ILTER_SYS_FAIL\020\377\377\377\377\377\377\377\377\377\001\022.\n!PHXPARTITIO"
      "NFILTER_KEY_NOT_EXISTS\020\376\377\377\377\377\377\377\377\377\001\022,\n\037PHX"
      "PARTITIONFILTER_CLIENT_RETRY\020\375\377\377\377\377\377\377\377\377\001\022"
      "(\n\033PHXPARTITIONFILTER_REDIRECT\020\374\377\377\377\377\377\377\377\377"
      "\001\022)\n\034PHXPARTITIONFILTER_NOTMASTER\020\373\377\377\377\377\377"
      "\377\377\377\001*.\n\nPhxMsgType\022\t\n\005MULTI\020\000\022\n\n\006SINGLE\020"
      "\001\022\t\n\005READY\020\0022\305\003\n\013PhxPFServer\0226\n\006Filter\022\024"
      ".phxpf.PhxPFOperator\032\024.phxpf.PhxPFRespon"
      "se\"\000\0226\n\006Update\022\024.phxpf.PhxPFOperator\032\024.p"
      "hxpf.PhxPFResponse\"\000\0226\n\006Delete\022\024.phxpf.P"
      "hxPFOperator\032\024.phxpf.PhxPFResponse\"\000\022E\n\t"
      "FilterOne\022\032.phxpf.PhxPFSingleOperator\032\032."
      "phxpf.PhxPFSingleResponse\"\000\022E\n\tUpdateOne"
      "\022\032.phxpf.PhxPFSingleOperator\032\032.phxpf.Phx"
      "PFSingleResponse\"\000\022E\n\tDeleteOne\022\032.phxpf."
      "PhxPFSingleOperator\032\032.phxpf.PhxPFSingleR"
      "esponse\"\000\0229\n\010IsMaster\022\026.google.protobuf."
      "Empty\032\023.phxpf.PhxIAmMaster\"\000B\003\200\001\000b\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1641);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "phxpf.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_phxpf_2eproto
namespace phxpf {
const ::google::protobuf::EnumDescriptor* PhxPFOperatorType_descriptor() {
  protobuf_phxpf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_phxpf_2eproto::file_level_enum_descriptors[0];
}
bool PhxPFOperatorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PhxPFRetType_descriptor() {
  protobuf_phxpf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_phxpf_2eproto::file_level_enum_descriptors[1];
}
bool PhxPFRetType_IsValid(int value) {
  switch (value) {
    case -5:
    case -4:
    case -3:
    case -2:
    case -1:
    case 0:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PhxMsgType_descriptor() {
  protobuf_phxpf_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_phxpf_2eproto::file_level_enum_descriptors[2];
}
bool PhxMsgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void PhxIAmMaster::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhxIAmMaster::kMasterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhxIAmMaster::PhxIAmMaster()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_phxpf_2eproto::InitDefaultsPhxIAmMaster();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxpf.PhxIAmMaster)
}
PhxIAmMaster::PhxIAmMaster(const PhxIAmMaster& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  master_ = from.master_;
  // @@protoc_insertion_point(copy_constructor:phxpf.PhxIAmMaster)
}

void PhxIAmMaster::SharedCtor() {
  master_ = false;
  _cached_size_ = 0;
}

PhxIAmMaster::~PhxIAmMaster() {
  // @@protoc_insertion_point(destructor:phxpf.PhxIAmMaster)
  SharedDtor();
}

void PhxIAmMaster::SharedDtor() {
}

void PhxIAmMaster::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PhxIAmMaster::descriptor() {
  ::protobuf_phxpf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_phxpf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PhxIAmMaster& PhxIAmMaster::default_instance() {
  ::protobuf_phxpf_2eproto::InitDefaultsPhxIAmMaster();
  return *internal_default_instance();
}

PhxIAmMaster* PhxIAmMaster::New(::google::protobuf::Arena* arena) const {
  PhxIAmMaster* n = new PhxIAmMaster;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PhxIAmMaster::Clear() {
// @@protoc_insertion_point(message_clear_start:phxpf.PhxIAmMaster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  master_ = false;
  _internal_metadata_.Clear();
}

bool PhxIAmMaster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxpf.PhxIAmMaster)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool master = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &master_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxpf.PhxIAmMaster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxpf.PhxIAmMaster)
  return false;
#undef DO_
}

void PhxIAmMaster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxpf.PhxIAmMaster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool master = 1;
  if (this->master() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->master(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:phxpf.PhxIAmMaster)
}

::google::protobuf::uint8* PhxIAmMaster::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phxpf.PhxIAmMaster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool master = 1;
  if (this->master() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->master(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phxpf.PhxIAmMaster)
  return target;
}

size_t PhxIAmMaster::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phxpf.PhxIAmMaster)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool master = 1;
  if (this->master() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PhxIAmMaster::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxpf.PhxIAmMaster)
  GOOGLE_DCHECK_NE(&from, this);
  const PhxIAmMaster* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PhxIAmMaster>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxpf.PhxIAmMaster)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxpf.PhxIAmMaster)
    MergeFrom(*source);
  }
}

void PhxIAmMaster::MergeFrom(const PhxIAmMaster& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxpf.PhxIAmMaster)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.master() != 0) {
    set_master(from.master());
  }
}

void PhxIAmMaster::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxpf.PhxIAmMaster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhxIAmMaster::CopyFrom(const PhxIAmMaster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxpf.PhxIAmMaster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhxIAmMaster::IsInitialized() const {
  return true;
}

void PhxIAmMaster::Swap(PhxIAmMaster* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhxIAmMaster::InternalSwap(PhxIAmMaster* other) {
  using std::swap;
  swap(master_, other->master_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PhxIAmMaster::GetMetadata() const {
  protobuf_phxpf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_phxpf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PhxPFValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhxPFValue::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhxPFValue::PhxPFValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_phxpf_2eproto::InitDefaultsPhxPFValue();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxpf.PhxPFValue)
}
PhxPFValue::PhxPFValue(const PhxPFValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      values_(from.values_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:phxpf.PhxPFValue)
}

void PhxPFValue::SharedCtor() {
  _cached_size_ = 0;
}

PhxPFValue::~PhxPFValue() {
  // @@protoc_insertion_point(destructor:phxpf.PhxPFValue)
  SharedDtor();
}

void PhxPFValue::SharedDtor() {
}

void PhxPFValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PhxPFValue::descriptor() {
  ::protobuf_phxpf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_phxpf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PhxPFValue& PhxPFValue::default_instance() {
  ::protobuf_phxpf_2eproto::InitDefaultsPhxPFValue();
  return *internal_default_instance();
}

PhxPFValue* PhxPFValue::New(::google::protobuf::Arena* arena) const {
  PhxPFValue* n = new PhxPFValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PhxPFValue::Clear() {
// @@protoc_insertion_point(message_clear_start:phxpf.PhxPFValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

bool PhxPFValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxpf.PhxPFValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string values = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_values()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->values(this->values_size() - 1).data(),
            static_cast<int>(this->values(this->values_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "phxpf.PhxPFValue.values"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxpf.PhxPFValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxpf.PhxPFValue)
  return false;
#undef DO_
}

void PhxPFValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxpf.PhxPFValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string values = 1;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->values(i).data(), static_cast<int>(this->values(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phxpf.PhxPFValue.values");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->values(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:phxpf.PhxPFValue)
}

::google::protobuf::uint8* PhxPFValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phxpf.PhxPFValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string values = 1;
  for (int i = 0, n = this->values_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->values(i).data(), static_cast<int>(this->values(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phxpf.PhxPFValue.values");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->values(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phxpf.PhxPFValue)
  return target;
}

size_t PhxPFValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phxpf.PhxPFValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string values = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->values_size());
  for (int i = 0, n = this->values_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->values(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PhxPFValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxpf.PhxPFValue)
  GOOGLE_DCHECK_NE(&from, this);
  const PhxPFValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PhxPFValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxpf.PhxPFValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxpf.PhxPFValue)
    MergeFrom(*source);
  }
}

void PhxPFValue::MergeFrom(const PhxPFValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxpf.PhxPFValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void PhxPFValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxpf.PhxPFValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhxPFValue::CopyFrom(const PhxPFValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxpf.PhxPFValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhxPFValue::IsInitialized() const {
  return true;
}

void PhxPFValue::Swap(PhxPFValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhxPFValue::InternalSwap(PhxPFValue* other) {
  using std::swap;
  values_.InternalSwap(&other->values_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PhxPFValue::GetMetadata() const {
  protobuf_phxpf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_phxpf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PhxPFOperatorArgs::InitAsDefaultInstance() {
  ::phxpf::_PhxPFOperatorArgs_default_instance_._instance.get_mutable()->value_ = const_cast< ::phxpf::PhxPFValue*>(
      ::phxpf::PhxPFValue::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhxPFOperatorArgs::kPartitionFieldNumber;
const int PhxPFOperatorArgs::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhxPFOperatorArgs::PhxPFOperatorArgs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_phxpf_2eproto::InitDefaultsPhxPFOperatorArgs();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxpf.PhxPFOperatorArgs)
}
PhxPFOperatorArgs::PhxPFOperatorArgs(const PhxPFOperatorArgs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  partition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.partition().size() > 0) {
    partition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.partition_);
  }
  if (from.has_value()) {
    value_ = new ::phxpf::PhxPFValue(*from.value_);
  } else {
    value_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:phxpf.PhxPFOperatorArgs)
}

void PhxPFOperatorArgs::SharedCtor() {
  partition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = NULL;
  _cached_size_ = 0;
}

PhxPFOperatorArgs::~PhxPFOperatorArgs() {
  // @@protoc_insertion_point(destructor:phxpf.PhxPFOperatorArgs)
  SharedDtor();
}

void PhxPFOperatorArgs::SharedDtor() {
  partition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete value_;
}

void PhxPFOperatorArgs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PhxPFOperatorArgs::descriptor() {
  ::protobuf_phxpf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_phxpf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PhxPFOperatorArgs& PhxPFOperatorArgs::default_instance() {
  ::protobuf_phxpf_2eproto::InitDefaultsPhxPFOperatorArgs();
  return *internal_default_instance();
}

PhxPFOperatorArgs* PhxPFOperatorArgs::New(::google::protobuf::Arena* arena) const {
  PhxPFOperatorArgs* n = new PhxPFOperatorArgs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PhxPFOperatorArgs::Clear() {
// @@protoc_insertion_point(message_clear_start:phxpf.PhxPFOperatorArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  partition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  _internal_metadata_.Clear();
}

bool PhxPFOperatorArgs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxpf.PhxPFOperatorArgs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string partition = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_partition()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->partition().data(), static_cast<int>(this->partition().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "phxpf.PhxPFOperatorArgs.partition"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .phxpf.PhxPFValue value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxpf.PhxPFOperatorArgs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxpf.PhxPFOperatorArgs)
  return false;
#undef DO_
}

void PhxPFOperatorArgs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxpf.PhxPFOperatorArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string partition = 1;
  if (this->partition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->partition().data(), static_cast<int>(this->partition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phxpf.PhxPFOperatorArgs.partition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->partition(), output);
  }

  // .phxpf.PhxPFValue value = 2;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->value_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:phxpf.PhxPFOperatorArgs)
}

::google::protobuf::uint8* PhxPFOperatorArgs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phxpf.PhxPFOperatorArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string partition = 1;
  if (this->partition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->partition().data(), static_cast<int>(this->partition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phxpf.PhxPFOperatorArgs.partition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->partition(), target);
  }

  // .phxpf.PhxPFValue value = 2;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->value_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phxpf.PhxPFOperatorArgs)
  return target;
}

size_t PhxPFOperatorArgs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phxpf.PhxPFOperatorArgs)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string partition = 1;
  if (this->partition().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->partition());
  }

  // .phxpf.PhxPFValue value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->value_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PhxPFOperatorArgs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxpf.PhxPFOperatorArgs)
  GOOGLE_DCHECK_NE(&from, this);
  const PhxPFOperatorArgs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PhxPFOperatorArgs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxpf.PhxPFOperatorArgs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxpf.PhxPFOperatorArgs)
    MergeFrom(*source);
  }
}

void PhxPFOperatorArgs::MergeFrom(const PhxPFOperatorArgs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxpf.PhxPFOperatorArgs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.partition().size() > 0) {

    partition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.partition_);
  }
  if (from.has_value()) {
    mutable_value()->::phxpf::PhxPFValue::MergeFrom(from.value());
  }
}

void PhxPFOperatorArgs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxpf.PhxPFOperatorArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhxPFOperatorArgs::CopyFrom(const PhxPFOperatorArgs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxpf.PhxPFOperatorArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhxPFOperatorArgs::IsInitialized() const {
  return true;
}

void PhxPFOperatorArgs::Swap(PhxPFOperatorArgs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhxPFOperatorArgs::InternalSwap(PhxPFOperatorArgs* other) {
  using std::swap;
  partition_.Swap(&other->partition_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PhxPFOperatorArgs::GetMetadata() const {
  protobuf_phxpf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_phxpf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PhxPFOperator::InitAsDefaultInstance() {
  ::phxpf::_PhxPFOperator_default_instance_._instance.get_mutable()->args_ = const_cast< ::phxpf::PhxPFOperatorArgs*>(
      ::phxpf::PhxPFOperatorArgs::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhxPFOperator::kOperatorFieldNumber;
const int PhxPFOperator::kArgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhxPFOperator::PhxPFOperator()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_phxpf_2eproto::InitDefaultsPhxPFOperator();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxpf.PhxPFOperator)
}
PhxPFOperator::PhxPFOperator(const PhxPFOperator& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_args()) {
    args_ = new ::phxpf::PhxPFOperatorArgs(*from.args_);
  } else {
    args_ = NULL;
  }
  operator__ = from.operator__;
  // @@protoc_insertion_point(copy_constructor:phxpf.PhxPFOperator)
}

void PhxPFOperator::SharedCtor() {
  ::memset(&args_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operator__) -
      reinterpret_cast<char*>(&args_)) + sizeof(operator__));
  _cached_size_ = 0;
}

PhxPFOperator::~PhxPFOperator() {
  // @@protoc_insertion_point(destructor:phxpf.PhxPFOperator)
  SharedDtor();
}

void PhxPFOperator::SharedDtor() {
  if (this != internal_default_instance()) delete args_;
}

void PhxPFOperator::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PhxPFOperator::descriptor() {
  ::protobuf_phxpf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_phxpf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PhxPFOperator& PhxPFOperator::default_instance() {
  ::protobuf_phxpf_2eproto::InitDefaultsPhxPFOperator();
  return *internal_default_instance();
}

PhxPFOperator* PhxPFOperator::New(::google::protobuf::Arena* arena) const {
  PhxPFOperator* n = new PhxPFOperator;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PhxPFOperator::Clear() {
// @@protoc_insertion_point(message_clear_start:phxpf.PhxPFOperator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && args_ != NULL) {
    delete args_;
  }
  args_ = NULL;
  operator__ = 0;
  _internal_metadata_.Clear();
}

bool PhxPFOperator::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxpf.PhxPFOperator)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .phxpf.PhxPFOperatorType operator = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_operator_(static_cast< ::phxpf::PhxPFOperatorType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .phxpf.PhxPFOperatorArgs args = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_args()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxpf.PhxPFOperator)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxpf.PhxPFOperator)
  return false;
#undef DO_
}

void PhxPFOperator::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxpf.PhxPFOperator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .phxpf.PhxPFOperatorType operator = 1;
  if (this->operator_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->operator_(), output);
  }

  // .phxpf.PhxPFOperatorArgs args = 2;
  if (this->has_args()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->args_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:phxpf.PhxPFOperator)
}

::google::protobuf::uint8* PhxPFOperator::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phxpf.PhxPFOperator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .phxpf.PhxPFOperatorType operator = 1;
  if (this->operator_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->operator_(), target);
  }

  // .phxpf.PhxPFOperatorArgs args = 2;
  if (this->has_args()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->args_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phxpf.PhxPFOperator)
  return target;
}

size_t PhxPFOperator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phxpf.PhxPFOperator)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .phxpf.PhxPFOperatorArgs args = 2;
  if (this->has_args()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->args_);
  }

  // .phxpf.PhxPFOperatorType operator = 1;
  if (this->operator_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->operator_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PhxPFOperator::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxpf.PhxPFOperator)
  GOOGLE_DCHECK_NE(&from, this);
  const PhxPFOperator* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PhxPFOperator>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxpf.PhxPFOperator)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxpf.PhxPFOperator)
    MergeFrom(*source);
  }
}

void PhxPFOperator::MergeFrom(const PhxPFOperator& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxpf.PhxPFOperator)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_args()) {
    mutable_args()->::phxpf::PhxPFOperatorArgs::MergeFrom(from.args());
  }
  if (from.operator_() != 0) {
    set_operator_(from.operator_());
  }
}

void PhxPFOperator::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxpf.PhxPFOperator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhxPFOperator::CopyFrom(const PhxPFOperator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxpf.PhxPFOperator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhxPFOperator::IsInitialized() const {
  return true;
}

void PhxPFOperator::Swap(PhxPFOperator* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhxPFOperator::InternalSwap(PhxPFOperator* other) {
  using std::swap;
  swap(args_, other->args_);
  swap(operator__, other->operator__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PhxPFOperator::GetMetadata() const {
  protobuf_phxpf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_phxpf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PhxPFResponse::InitAsDefaultInstance() {
  ::phxpf::_PhxPFResponse_default_instance_._instance.get_mutable()->value_ = const_cast< ::phxpf::PhxPFValue*>(
      ::phxpf::PhxPFValue::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhxPFResponse::kRetFieldNumber;
const int PhxPFResponse::kMsgFieldNumber;
const int PhxPFResponse::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhxPFResponse::PhxPFResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_phxpf_2eproto::InitDefaultsPhxPFResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxpf.PhxPFResponse)
}
PhxPFResponse::PhxPFResponse(const PhxPFResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.has_value()) {
    value_ = new ::phxpf::PhxPFValue(*from.value_);
  } else {
    value_ = NULL;
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:phxpf.PhxPFResponse)
}

void PhxPFResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&value_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&value_)) + sizeof(ret_));
  _cached_size_ = 0;
}

PhxPFResponse::~PhxPFResponse() {
  // @@protoc_insertion_point(destructor:phxpf.PhxPFResponse)
  SharedDtor();
}

void PhxPFResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete value_;
}

void PhxPFResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PhxPFResponse::descriptor() {
  ::protobuf_phxpf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_phxpf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PhxPFResponse& PhxPFResponse::default_instance() {
  ::protobuf_phxpf_2eproto::InitDefaultsPhxPFResponse();
  return *internal_default_instance();
}

PhxPFResponse* PhxPFResponse::New(::google::protobuf::Arena* arena) const {
  PhxPFResponse* n = new PhxPFResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PhxPFResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:phxpf.PhxPFResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  ret_ = 0;
  _internal_metadata_.Clear();
}

bool PhxPFResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxpf.PhxPFResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "phxpf.PhxPFResponse.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .phxpf.PhxPFValue value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxpf.PhxPFResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxpf.PhxPFResponse)
  return false;
#undef DO_
}

void PhxPFResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxpf.PhxPFResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phxpf.PhxPFResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // .phxpf.PhxPFValue value = 3;
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->value_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:phxpf.PhxPFResponse)
}

::google::protobuf::uint8* PhxPFResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phxpf.PhxPFResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phxpf.PhxPFResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // .phxpf.PhxPFValue value = 3;
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->value_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phxpf.PhxPFResponse)
  return target;
}

size_t PhxPFResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phxpf.PhxPFResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // .phxpf.PhxPFValue value = 3;
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->value_);
  }

  // int32 ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PhxPFResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxpf.PhxPFResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PhxPFResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PhxPFResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxpf.PhxPFResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxpf.PhxPFResponse)
    MergeFrom(*source);
  }
}

void PhxPFResponse::MergeFrom(const PhxPFResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxpf.PhxPFResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.has_value()) {
    mutable_value()->::phxpf::PhxPFValue::MergeFrom(from.value());
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void PhxPFResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxpf.PhxPFResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhxPFResponse::CopyFrom(const PhxPFResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxpf.PhxPFResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhxPFResponse::IsInitialized() const {
  return true;
}

void PhxPFResponse::Swap(PhxPFResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhxPFResponse::InternalSwap(PhxPFResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  swap(value_, other->value_);
  swap(ret_, other->ret_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PhxPFResponse::GetMetadata() const {
  protobuf_phxpf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_phxpf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PhxPFSingleOperatorArgs::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhxPFSingleOperatorArgs::kPartitionFieldNumber;
const int PhxPFSingleOperatorArgs::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhxPFSingleOperatorArgs::PhxPFSingleOperatorArgs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_phxpf_2eproto::InitDefaultsPhxPFSingleOperatorArgs();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxpf.PhxPFSingleOperatorArgs)
}
PhxPFSingleOperatorArgs::PhxPFSingleOperatorArgs(const PhxPFSingleOperatorArgs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  partition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.partition().size() > 0) {
    partition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.partition_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:phxpf.PhxPFSingleOperatorArgs)
}

void PhxPFSingleOperatorArgs::SharedCtor() {
  partition_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PhxPFSingleOperatorArgs::~PhxPFSingleOperatorArgs() {
  // @@protoc_insertion_point(destructor:phxpf.PhxPFSingleOperatorArgs)
  SharedDtor();
}

void PhxPFSingleOperatorArgs::SharedDtor() {
  partition_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PhxPFSingleOperatorArgs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PhxPFSingleOperatorArgs::descriptor() {
  ::protobuf_phxpf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_phxpf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PhxPFSingleOperatorArgs& PhxPFSingleOperatorArgs::default_instance() {
  ::protobuf_phxpf_2eproto::InitDefaultsPhxPFSingleOperatorArgs();
  return *internal_default_instance();
}

PhxPFSingleOperatorArgs* PhxPFSingleOperatorArgs::New(::google::protobuf::Arena* arena) const {
  PhxPFSingleOperatorArgs* n = new PhxPFSingleOperatorArgs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PhxPFSingleOperatorArgs::Clear() {
// @@protoc_insertion_point(message_clear_start:phxpf.PhxPFSingleOperatorArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  partition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PhxPFSingleOperatorArgs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxpf.PhxPFSingleOperatorArgs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string partition = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_partition()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->partition().data(), static_cast<int>(this->partition().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "phxpf.PhxPFSingleOperatorArgs.partition"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "phxpf.PhxPFSingleOperatorArgs.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxpf.PhxPFSingleOperatorArgs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxpf.PhxPFSingleOperatorArgs)
  return false;
#undef DO_
}

void PhxPFSingleOperatorArgs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxpf.PhxPFSingleOperatorArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string partition = 1;
  if (this->partition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->partition().data(), static_cast<int>(this->partition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phxpf.PhxPFSingleOperatorArgs.partition");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->partition(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phxpf.PhxPFSingleOperatorArgs.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:phxpf.PhxPFSingleOperatorArgs)
}

::google::protobuf::uint8* PhxPFSingleOperatorArgs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phxpf.PhxPFSingleOperatorArgs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string partition = 1;
  if (this->partition().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->partition().data(), static_cast<int>(this->partition().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phxpf.PhxPFSingleOperatorArgs.partition");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->partition(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phxpf.PhxPFSingleOperatorArgs.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phxpf.PhxPFSingleOperatorArgs)
  return target;
}

size_t PhxPFSingleOperatorArgs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phxpf.PhxPFSingleOperatorArgs)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string partition = 1;
  if (this->partition().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->partition());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PhxPFSingleOperatorArgs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxpf.PhxPFSingleOperatorArgs)
  GOOGLE_DCHECK_NE(&from, this);
  const PhxPFSingleOperatorArgs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PhxPFSingleOperatorArgs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxpf.PhxPFSingleOperatorArgs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxpf.PhxPFSingleOperatorArgs)
    MergeFrom(*source);
  }
}

void PhxPFSingleOperatorArgs::MergeFrom(const PhxPFSingleOperatorArgs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxpf.PhxPFSingleOperatorArgs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.partition().size() > 0) {

    partition_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.partition_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void PhxPFSingleOperatorArgs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxpf.PhxPFSingleOperatorArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhxPFSingleOperatorArgs::CopyFrom(const PhxPFSingleOperatorArgs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxpf.PhxPFSingleOperatorArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhxPFSingleOperatorArgs::IsInitialized() const {
  return true;
}

void PhxPFSingleOperatorArgs::Swap(PhxPFSingleOperatorArgs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhxPFSingleOperatorArgs::InternalSwap(PhxPFSingleOperatorArgs* other) {
  using std::swap;
  partition_.Swap(&other->partition_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PhxPFSingleOperatorArgs::GetMetadata() const {
  protobuf_phxpf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_phxpf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PhxPFSingleOperator::InitAsDefaultInstance() {
  ::phxpf::_PhxPFSingleOperator_default_instance_._instance.get_mutable()->args_ = const_cast< ::phxpf::PhxPFSingleOperatorArgs*>(
      ::phxpf::PhxPFSingleOperatorArgs::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhxPFSingleOperator::kOperatorFieldNumber;
const int PhxPFSingleOperator::kArgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhxPFSingleOperator::PhxPFSingleOperator()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_phxpf_2eproto::InitDefaultsPhxPFSingleOperator();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxpf.PhxPFSingleOperator)
}
PhxPFSingleOperator::PhxPFSingleOperator(const PhxPFSingleOperator& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_args()) {
    args_ = new ::phxpf::PhxPFSingleOperatorArgs(*from.args_);
  } else {
    args_ = NULL;
  }
  operator__ = from.operator__;
  // @@protoc_insertion_point(copy_constructor:phxpf.PhxPFSingleOperator)
}

void PhxPFSingleOperator::SharedCtor() {
  ::memset(&args_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operator__) -
      reinterpret_cast<char*>(&args_)) + sizeof(operator__));
  _cached_size_ = 0;
}

PhxPFSingleOperator::~PhxPFSingleOperator() {
  // @@protoc_insertion_point(destructor:phxpf.PhxPFSingleOperator)
  SharedDtor();
}

void PhxPFSingleOperator::SharedDtor() {
  if (this != internal_default_instance()) delete args_;
}

void PhxPFSingleOperator::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PhxPFSingleOperator::descriptor() {
  ::protobuf_phxpf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_phxpf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PhxPFSingleOperator& PhxPFSingleOperator::default_instance() {
  ::protobuf_phxpf_2eproto::InitDefaultsPhxPFSingleOperator();
  return *internal_default_instance();
}

PhxPFSingleOperator* PhxPFSingleOperator::New(::google::protobuf::Arena* arena) const {
  PhxPFSingleOperator* n = new PhxPFSingleOperator;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PhxPFSingleOperator::Clear() {
// @@protoc_insertion_point(message_clear_start:phxpf.PhxPFSingleOperator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && args_ != NULL) {
    delete args_;
  }
  args_ = NULL;
  operator__ = 0;
  _internal_metadata_.Clear();
}

bool PhxPFSingleOperator::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxpf.PhxPFSingleOperator)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .phxpf.PhxPFOperatorType operator = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_operator_(static_cast< ::phxpf::PhxPFOperatorType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .phxpf.PhxPFSingleOperatorArgs args = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_args()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxpf.PhxPFSingleOperator)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxpf.PhxPFSingleOperator)
  return false;
#undef DO_
}

void PhxPFSingleOperator::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxpf.PhxPFSingleOperator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .phxpf.PhxPFOperatorType operator = 1;
  if (this->operator_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->operator_(), output);
  }

  // .phxpf.PhxPFSingleOperatorArgs args = 2;
  if (this->has_args()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->args_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:phxpf.PhxPFSingleOperator)
}

::google::protobuf::uint8* PhxPFSingleOperator::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phxpf.PhxPFSingleOperator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .phxpf.PhxPFOperatorType operator = 1;
  if (this->operator_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->operator_(), target);
  }

  // .phxpf.PhxPFSingleOperatorArgs args = 2;
  if (this->has_args()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->args_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phxpf.PhxPFSingleOperator)
  return target;
}

size_t PhxPFSingleOperator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phxpf.PhxPFSingleOperator)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .phxpf.PhxPFSingleOperatorArgs args = 2;
  if (this->has_args()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->args_);
  }

  // .phxpf.PhxPFOperatorType operator = 1;
  if (this->operator_() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->operator_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PhxPFSingleOperator::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxpf.PhxPFSingleOperator)
  GOOGLE_DCHECK_NE(&from, this);
  const PhxPFSingleOperator* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PhxPFSingleOperator>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxpf.PhxPFSingleOperator)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxpf.PhxPFSingleOperator)
    MergeFrom(*source);
  }
}

void PhxPFSingleOperator::MergeFrom(const PhxPFSingleOperator& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxpf.PhxPFSingleOperator)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_args()) {
    mutable_args()->::phxpf::PhxPFSingleOperatorArgs::MergeFrom(from.args());
  }
  if (from.operator_() != 0) {
    set_operator_(from.operator_());
  }
}

void PhxPFSingleOperator::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxpf.PhxPFSingleOperator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhxPFSingleOperator::CopyFrom(const PhxPFSingleOperator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxpf.PhxPFSingleOperator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhxPFSingleOperator::IsInitialized() const {
  return true;
}

void PhxPFSingleOperator::Swap(PhxPFSingleOperator* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhxPFSingleOperator::InternalSwap(PhxPFSingleOperator* other) {
  using std::swap;
  swap(args_, other->args_);
  swap(operator__, other->operator__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PhxPFSingleOperator::GetMetadata() const {
  protobuf_phxpf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_phxpf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PhxPFSingleResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhxPFSingleResponse::kRetFieldNumber;
const int PhxPFSingleResponse::kMsgFieldNumber;
const int PhxPFSingleResponse::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhxPFSingleResponse::PhxPFSingleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_phxpf_2eproto::InitDefaultsPhxPFSingleResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxpf.PhxPFSingleResponse)
}
PhxPFSingleResponse::PhxPFSingleResponse(const PhxPFSingleResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&ret_, &from.ret_,
    static_cast<size_t>(reinterpret_cast<char*>(&value_) -
    reinterpret_cast<char*>(&ret_)) + sizeof(value_));
  // @@protoc_insertion_point(copy_constructor:phxpf.PhxPFSingleResponse)
}

void PhxPFSingleResponse::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ret_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&ret_)) + sizeof(value_));
  _cached_size_ = 0;
}

PhxPFSingleResponse::~PhxPFSingleResponse() {
  // @@protoc_insertion_point(destructor:phxpf.PhxPFSingleResponse)
  SharedDtor();
}

void PhxPFSingleResponse::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PhxPFSingleResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PhxPFSingleResponse::descriptor() {
  ::protobuf_phxpf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_phxpf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PhxPFSingleResponse& PhxPFSingleResponse::default_instance() {
  ::protobuf_phxpf_2eproto::InitDefaultsPhxPFSingleResponse();
  return *internal_default_instance();
}

PhxPFSingleResponse* PhxPFSingleResponse::New(::google::protobuf::Arena* arena) const {
  PhxPFSingleResponse* n = new PhxPFSingleResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PhxPFSingleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:phxpf.PhxPFSingleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ret_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&ret_)) + sizeof(value_));
  _internal_metadata_.Clear();
}

bool PhxPFSingleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxpf.PhxPFSingleResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "phxpf.PhxPFSingleResponse.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxpf.PhxPFSingleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxpf.PhxPFSingleResponse)
  return false;
#undef DO_
}

void PhxPFSingleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxpf.PhxPFSingleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phxpf.PhxPFSingleResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  // bool value = 3;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:phxpf.PhxPFSingleResponse)
}

::google::protobuf::uint8* PhxPFSingleResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phxpf.PhxPFSingleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "phxpf.PhxPFSingleResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  // bool value = 3;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phxpf.PhxPFSingleResponse)
  return target;
}

size_t PhxPFSingleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phxpf.PhxPFSingleResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // int32 ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  // bool value = 3;
  if (this->value() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PhxPFSingleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxpf.PhxPFSingleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PhxPFSingleResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PhxPFSingleResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxpf.PhxPFSingleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxpf.PhxPFSingleResponse)
    MergeFrom(*source);
  }
}

void PhxPFSingleResponse::MergeFrom(const PhxPFSingleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxpf.PhxPFSingleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void PhxPFSingleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxpf.PhxPFSingleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhxPFSingleResponse::CopyFrom(const PhxPFSingleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxpf.PhxPFSingleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhxPFSingleResponse::IsInitialized() const {
  return true;
}

void PhxPFSingleResponse::Swap(PhxPFSingleResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhxPFSingleResponse::InternalSwap(PhxPFSingleResponse* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  swap(ret_, other->ret_);
  swap(value_, other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PhxPFSingleResponse::GetMetadata() const {
  protobuf_phxpf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_phxpf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PhxPFMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhxPFMsg::kVtypeFieldNumber;
const int PhxPFMsg::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhxPFMsg::PhxPFMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_phxpf_2eproto::InitDefaultsPhxPFMsg();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:phxpf.PhxPFMsg)
}
PhxPFMsg::PhxPFMsg(const PhxPFMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  vtype_ = from.vtype_;
  // @@protoc_insertion_point(copy_constructor:phxpf.PhxPFMsg)
}

void PhxPFMsg::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vtype_ = 0;
  _cached_size_ = 0;
}

PhxPFMsg::~PhxPFMsg() {
  // @@protoc_insertion_point(destructor:phxpf.PhxPFMsg)
  SharedDtor();
}

void PhxPFMsg::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PhxPFMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PhxPFMsg::descriptor() {
  ::protobuf_phxpf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_phxpf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PhxPFMsg& PhxPFMsg::default_instance() {
  ::protobuf_phxpf_2eproto::InitDefaultsPhxPFMsg();
  return *internal_default_instance();
}

PhxPFMsg* PhxPFMsg::New(::google::protobuf::Arena* arena) const {
  PhxPFMsg* n = new PhxPFMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PhxPFMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:phxpf.PhxPFMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vtype_ = 0;
  _internal_metadata_.Clear();
}

bool PhxPFMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:phxpf.PhxPFMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .phxpf.PhxMsgType vtype = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_vtype(static_cast< ::phxpf::PhxMsgType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:phxpf.PhxPFMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:phxpf.PhxPFMsg)
  return false;
#undef DO_
}

void PhxPFMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:phxpf.PhxPFMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .phxpf.PhxMsgType vtype = 1;
  if (this->vtype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->vtype(), output);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:phxpf.PhxPFMsg)
}

::google::protobuf::uint8* PhxPFMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:phxpf.PhxPFMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .phxpf.PhxMsgType vtype = 1;
  if (this->vtype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->vtype(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:phxpf.PhxPFMsg)
  return target;
}

size_t PhxPFMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:phxpf.PhxPFMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // .phxpf.PhxMsgType vtype = 1;
  if (this->vtype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->vtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PhxPFMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:phxpf.PhxPFMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PhxPFMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PhxPFMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:phxpf.PhxPFMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:phxpf.PhxPFMsg)
    MergeFrom(*source);
  }
}

void PhxPFMsg::MergeFrom(const PhxPFMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:phxpf.PhxPFMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.vtype() != 0) {
    set_vtype(from.vtype());
  }
}

void PhxPFMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:phxpf.PhxPFMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhxPFMsg::CopyFrom(const PhxPFMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:phxpf.PhxPFMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhxPFMsg::IsInitialized() const {
  return true;
}

void PhxPFMsg::Swap(PhxPFMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhxPFMsg::InternalSwap(PhxPFMsg* other) {
  using std::swap;
  value_.Swap(&other->value_);
  swap(vtype_, other->vtype_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PhxPFMsg::GetMetadata() const {
  protobuf_phxpf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_phxpf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace phxpf

// @@protoc_insertion_point(global_scope)
